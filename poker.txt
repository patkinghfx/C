// Define constants for card ranks and suits
const CARD_RANKS = '23456789TJQKA';
const CARD_SUITS = 'CDHS';

// Function to determine the winning poker hand
function determineWinningHand(cards) {
  if (cards.length !== 5) {
    throw new Error('Invalid number of cards. You must provide exactly 5 cards.');
  }

  // Sort the cards by rank
  cards.sort((a, b) => CARD_RANKS.indexOf(a[0]) - CARD_RANKS.indexOf(b[0]));

  // Check for different poker hands in descending order of rank
  if (isRoyalFlush(cards)) {
    return 'Royal Flush';
  } else if (isStraightFlush(cards)) {
    return 'Straight Flush';
  } else if (isFourOfAKind(cards)) {
    return 'Four of a Kind';
  } else if (isFullHouse(cards)) {
    return 'Full House';
  } else if (isFlush(cards)) {
    return 'Flush';
  } else if (isStraight(cards)) {
    return 'Straight';
  } else if (isThreeOfAKind(cards)) {
    return 'Three of a Kind';
  } else if (isTwoPair(cards)) {
    return 'Two Pair';
  } else if (isOnePair(cards)) {
    return 'One Pair';
  } else {
    return 'High Card';
  }
}

// Helper functions to check poker hands
function isRoyalFlush(cards) {
  return isStraightFlush(cards) && cards[0][0] === 'A';
}

function isStraightFlush(cards) {
  return isFlush(cards) && isStraight(cards);
}

function isFourOfAKind(cards) {
  for (let i = 0; i <= 1; i++) {
    if (cards[i][0] === cards[i + 1][0] && cards[i + 1][0] === cards[i + 2][0] && cards[i + 2][0] === cards[i + 3][0]) {
      return true;
    }
  }
  return false;
}

function isFullHouse(cards) {
  return (cards[0][0] === cards[1][0] && cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]) ||
         (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0] && cards[3][0] === cards[4][0]);
}

function isFlush(cards) {
  return cards.every(card => card[1] === cards[0][1]);
}

function isStraight(cards) {
  for (let i = 0; i < 4; i++) {
    if (CARD_RANKS.indexOf(cards[i][0]) + 1 !== CARD_RANKS.indexOf(cards[i + 1][0])) {
      return false;
    }
  }
  return true;
}

function isThreeOfAKind(cards) {
  for (let i = 0; i <= 2; i++) {
    if (cards[i][0] === cards[i + 1][0] && cards[i + 1][0] === cards[i + 2][0]) {
      return true;
    }
  }
  return false;
}

function isTwoPair(cards) {
  return (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0]) ||
         (cards[0][0] === cards[1][0] && cards[3][0] === cards[4][0]) ||
         (cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]);
}

function isOnePair(cards) {
  for (let i = 0; i < 4; i++) {
    if (cards[i][0] === cards[i + 1][0]) {
      return true;
    }
  }
  return false;
}

// Example usage:
const pokerHand = ['3C', '5D', '7H', '6S', '4C']; // Replace with your random collection of 5 cards
const winningHand = determineWinningHand(pokerHand);
console.log(`The winning hand is: ${winningHand}`);
